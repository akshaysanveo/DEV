
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>Sanveo Inspire</title>
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <link href="@Url.Content("~")Content/Skins/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css">
    <!-- Ionicons -->
    <link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css">
    @*<link href="~/bower_components/morrisjs/morris.css" rel="stylesheet">*@
    <link href="@Url.Content("~")Content/Skins/dist/css/AdminLTE.min.css" rel="stylesheet" />
    <link href="@Url.Content("~")Content/Skins/dist/css/skins/_all-skins.min.css" rel="stylesheet" />
    <!-- Morris Charts CSS -->
    <link rel="stylesheet" href="https://developer.api.autodesk.com/viewingservice/v1/viewers/style.min.css" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://kendo.cdn.telerik.com/2017.2.504/styles/kendo.common.min.css" />
    <link rel="stylesheet" href="https://kendo.cdn.telerik.com/2017.2.504/styles/kendo.rtl.min.css" />
    <link rel="stylesheet" href="https://kendo.cdn.telerik.com/2017.2.504/styles/kendo.silver.min.css" />
    <link rel="stylesheet" href="https://kendo.cdn.telerik.com/2017.2.504/styles/kendo.mobile.all.min.css" />
    <link rel="stylesheet" href="https://kendo.cdn.telerik.com/2017.1.223/styles/kendo.common-material.min.css" />
    <link rel="stylesheet" href="https://kendo.cdn.telerik.com/2017.1.223/styles/kendo.material.min.css" />
    <link rel="stylesheet" href="https://kendo.cdn.telerik.com/2017.1.223/styles/kendo.material.mobile.min.css" />

    <!-- Latest compiled JavaScript -->
    <script src="https://code.jquery.com/jquery-1.12.3.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2017.2.504/js/kendo.all.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2016.3.1028/js/angular.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2016.3.1028/js/jszip.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2015.3.1111/js/kendo.aspnetmvc.min.js"></script>
    <script src="https://the360view.typepad.com/files/glue-embedded.js"></script>
    <!-- Autodesk Forge Viewer files -->
    <script src="https://ase-cdn.autodesk.com/adp/v1.0.3/js/adp-web-analytics-sdk.min.js"></script>
    <script src="https://developer.api.autodesk.com/viewingservice/v1/viewers/three.min.js"></script>
    <script src="https://developer.api.autodesk.com/viewingservice/v1/viewers/viewer3D.min.js"></script>
    <script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>
    <script src="~/signalr/hubs"></script>

    <script src="@Url.Content("~")Content/Skins/bootstrap/js/bootstrap.min.js"></script>
    <!-- AdminLTE App -->
    <script src="@Url.Content("~")Content/Skins/dist/js/app.js"></script>
    <!-- AdminLTE for demo purposes -->
    <script src="@Url.Content("~")Content/Skins/dist/js/demo.js"></script>
    <script src="@Url.Content("~")Content/Skins/plugins/confirm/jquery.confirm.js"></script>
    <script src="~/Scripts/table2excel.js"></script>
    <link href="~/Content/Index.css" rel="stylesheet" />

    <style>
    </style>


</head>

<body>
    <div class="k-content">

        <div class="col-xs-12">

            <div class="col-xs-4">
                @(
                                        Html.Kendo().DropDownList()
                                        .Name("ClearanceSet1file")
                                        .DataTextField("NodeName")
                                        .DataValueField("id")
                                        .OptionLabel("Select Set1 File")
                                        .HtmlAttributes(new { style = "width:100%" })
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetFiles", "Home");
                                            });
                                        })
                                        .Events(e => { e.Change("onClearanceSet1FileChange"); })
                )
            </div>
            <div class="col-xs-2">
                @(
                                        Html.Kendo().DropDownList()
                                        .Name("ClearanceSet1fileversion")
                                        .DataTextField("version")
                                        .DataValueField("Urn")
                                        .OptionLabel("Select Version")
                                        .HtmlAttributes(new { style = "width:100%" })
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetVersion", "Home").Data("DDLClearanceSet1FileData");
                                            });
                                        })
                                        .Events(e => { e.Change("ClearanceSet1VersionChange"); })
                )
            </div>
            <div class="col-xs-4">
                @(
                                        Html.Kendo().DropDownList()
                                        .Name("Clear_Categorys_1")
                                        .DataTextField("CateCount")
                                        .DataValueField("Category_Name")
                                        .OptionLabel("Selection Set 1")
                                        .HtmlAttributes(new { style = "width:100%" })
                            .Template("<label for='' class='chkprop' ><input type='checkbox' id='Property_Name#:data.Category_Name#' class='propchk check-item' name='Set1Name' value='#:data.Category_Name#' onclick='checkSet1values(this);'  /> #:data.CateCount#</label>")
                                .Events(e => { e.Close("onCloseSet1Name").Change("onChangeset1").DataBound("set1check"); })
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetCategoryName", "Home").Data("ClearanceSet1_searchCategoryData");
                                            });
                                        })
                )
            </div>
        </div>

        <div class="col-xs-12">
            <br />
            <div class="col-xs-4">
                @(
                                        Html.Kendo().DropDownList()
                                        .Name("ClearanceSet2file")
                                        .DataTextField("NodeName")
                                        .DataValueField("id")
                                        .OptionLabel("Select Set2 File")
                                        .HtmlAttributes(new { style = "width:100%" })
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetFiles", "Home");
                                            });
                                        })
                                        .Events(e => { e.Change("onClearanceSet2FileChange"); })
                )
            </div>
            <div class="col-xs-2">
                @(
                                        Html.Kendo().DropDownList()
                                        .Name("ClearanceSet2fileversion")
                                        .DataTextField("version")
                                        .DataValueField("Urn")
                                        .OptionLabel("Select Version")
                                        .HtmlAttributes(new { style = "width:100%" })
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetVersion", "Home").Data("DDLClearanceSet2FileData");
                                            });
                                        })
                                        .Events(e => { e.Change("ClearanceSet2VersionChange"); })
                )
            </div>
            <div class="col-xs-4">
                @(
                                        Html.Kendo().DropDownList()
                                        .Name("Clear_Categorys_2")
                                        .DataTextField("CateCount")
                                        .DataValueField("Category_Name")
                                        .OptionLabel("Selection Set 2")
                                        .HtmlAttributes(new { style = "width:100%" })
                                        .HtmlAttributes(new { style = "width:100%" })
                                        .Template("<label for='' class='chkprop' ><input type='checkbox' id='Property_Name#:data.Category_Name#' class='propchk check-item' name='Set2Name' value='#:data.Category_Name#' onclick='checkSet2values(this);'  /> #:data.CateCount#</label>")
                                            .Events(e => { e.Close("onCloseSet2Name").Change("onChangeset2").DataBound("set2check"); })
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetCategoryName", "Home").Data("ClearanceSet2_searchCategoryData");
                                            });
                                        })
                )


            </div>

        </div>

        <div class="col-xs-12" style="padding-left:27px">
            <br />
            <label> <input type="checkbox" id="ClearValue" onchange="btnclearChange()" />Clearances box already modelled</label>
        </div>

        <div class="col-xs-12" style="padding-left:27px">
            <br />
            <input type="number" id="clear_toptext" placeholder="Top" class="k-textbox" style="margin-right:10px;width:13%" />
            <input type="number" id="clear_bottomtext" placeholder="Bottom" class="k-textbox" style="margin-right:10px;width:13%" />
            <input type="number" id="clear_fronttext" placeholder="Front" class="k-textbox" style="margin-right:10px;width:13%" />
            <input type="number" id="clear_sidetext" placeholder="Side" class="k-textbox" style="margin-right:10px;width:13%" />
            <input type="number" id="clear_backtext" placeholder="Back" class="k-textbox" style="margin-right:10px;width:13%" />
            <input type="submit" value="Start" class="btn btn-primary" onclick="GetClearanceData()" style="width:8%;" />
            <input type="submit" value="Clear model" class="btn btn-primary" onclick="window.parent.ClearModel()" style="" />
            <input type="submit" id="btnSendEmail" value="Send Email" class="btn btn-primary" disabled="disabled" onclick="SendEmailNotify()" style="" />
            <br />
            <span style="font-size:15px;color:red;">Note : </span><span style="font-size:15px;color:#3c8dbc;">1 Unit = 12 Inches, 0.5 Unit = 6 Inches.</span>
        </div>

        <div class="col-xs-2">
            <br />
            <div id="myProgress" style="display:none">
                <div id="myBar"></div>
            </div>
        </div>

    
   


        <div class="row col-xs-11" style="overflow:auto;padding-left:27px;height:300px">
            <br /><br />
            <table id="clearancedatatable" class="table table-striped table-bordered" cellspacing="0" style="font-size: 14px;display:none;width:100%;">
                <thead>
                    <tr>
                        <th colspan="5">Set1 ID</th>
                        <th colspan="5">Set2 ID</th>
                    </tr>
                    <tr>
                        <td>Filename</td>
                        <td>Category</td>
                        <td>Revit Id</td>
                        <td>Forge Id</td>
                        <td>Highlight</td>
                        <td>Filename</td>
                        <td>Category</td>
                        <td>Revit Id</td>
                        <td>Forge Id</td>
                        <td>Highlight</td>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>



    </div>

    <!-- Script for Clearance window -->
    <script>
         var Set1Ids="";
         var Set2Ids="";

         var filenameset1 = new Array();
         var categoryset1 = new Array();
         var revitidset1 = new Array();
         var forgeids = new Array();

         var filenameset2 = new Array();
         var categoryset2 = new Array();
         var revitidset2 = new Array();
         var alldbId = new Array();

        var instanceTree;

        function SendEmailNotify() {
            var TableValueClearence = $("#DivClearance").html();
            console.log('Clearence------');
            console.log(TableValueClearence);


            var value = JSON.stringify({
                'TableValueClearence': TableValueClearence,
            });

            $.ajax({
                type: "POST",
                contentType: 'application/json',
                url: '@Url.Action("SendClearenceEmail", "Clearance")',

                data: value,
                dataType: "json",
                success: function (result) {
                    alert(result);

                },
                error: function (result) {
                    alert(result);

                }
            });

        }

        function onClearanceSet1FileChange() {

            $("#ClearanceSet1fileversion").data("kendoDropDownList").dataSource.read();
        }

        function onClearanceSet2FileChange() {
            $("#ClearanceSet2fileversion").data("kendoDropDownList").dataSource.read();
        }
        function ClearanceSet1VersionChange() {
            $("#Clear_Categorys_1").data("kendoDropDownList").dataSource.read();
        }

        function ClearanceSet2VersionChange() {
            $("#Clear_Categorys_2").data("kendoDropDownList").dataSource.read();
        }
        function DDLClearanceSet1FileData() {
            return {
                filename: $("#ClearanceSet1file").data("kendoDropDownList").text()
            };
        }
        function DDLClearanceSet2FileData() {
            return {
                filename: $("#ClearanceSet2file").data("kendoDropDownList").text()
            };
        }
        function ClearanceSet1_searchCategoryData() {
            return {
                urn: $("#ClearanceSet1fileversion").data("kendoDropDownList").value()
            };
        }
        function ClearanceSet2_searchCategoryData() {
            return {
                urn: $("#ClearanceSet2fileversion").data("kendoDropDownList").value()
            };
        }
        var  IsItemChecked="";
        function onCloseSet1Name(e) {
            if (IsItemChecked == true) {
                IsItemChecked = false;
                e.preventDefault();
            }
            UpdateSet1Ids();
        }

        function UpdateSet1Ids() {
            var Set1_ids = [];
            Set1Ids = "";
            $('input[name="Set1Name"]:checked').each(function () {
                Set1_ids.push(this.value);
            });
            Set1Ids = Set1_ids.toString();
          }

        function set1check()
        { }

        function onChangeset1(e) {
            e.sender.value(null);
        }

        function checkSet1values(obj) {
            var $cb = $(obj).find("input:checkbox");
            if (!$cb.prop("checked")) {
                $cb.prop("checked", true);
            } else {
                $cb.prop("checked", false);
            }
            var id = $(obj).attr('id');
            var name = $(obj).attr('name');
            //  console.log(name);
            var value = parseInt($(obj).attr('value'));
            var IsChecked = $(obj).is(':checked');
            var hf = $("#hf_" + name).get(0);

            if (value != 0) {
                var totalchk = $('input[id*="chk_' + name + '"]').not("#chk_" + name + "_0").length;
                var checkedchk = $('input[id*="chk_' + name + '"]:checked').not("#chk_" + name + "_0").length;
                if (totalchk == checkedchk) {
                    $("#chk_" + name + "_0").prop("checked", true);
                }
                else {
                    $("#chk_" + name + "_0").prop("checked", false);

                }
            }
            else {
                $('input[id*="chk_' + name + '"]').each(function () {
                    console.log($(this).val());
                    if (parseInt($(this).val()) != 0) {
                        if (IsChecked == true) {
                            $(this).prop("checked", true);
                        }
                        else {
                            $(this).prop("checked", false);
                        }
                    }
                });
            }
            IsItemChecked = true;
        }

        function onCloseSet2Name(e) {
            if (IsItemChecked == true) {
                IsItemChecked = false;
                e.preventDefault();
            }
            UpdateSet2Ids();
        }

        function UpdateSet2Ids() {
            var Set2_ids = [];
            Set2Ids = "";
            $('input[name="Set2Name"]:checked').each(function () {
                Set2_ids.push(this.value);
            });
            Set2Ids = Set2_ids.toString();


        }

        function set2check()
        { }

        function onChangeset2(e) {
            e.sender.value(null);
        }

        function checkSet2values(obj) {
            var $cb = $(obj).find("input:checkbox");
            if (!$cb.prop("checked")) {
                $cb.prop("checked", true);
            } else {
                $cb.prop("checked", false);
            }
            var id = $(obj).attr('id');
            var name = $(obj).attr('name');
            //  console.log(name);
            var value = parseInt($(obj).attr('value'));
            var IsChecked = $(obj).is(':checked');
            var hf = $("#hf_" + name).get(0);

            if (value != 0) {
                var totalchk = $('input[id*="chk_' + name + '"]').not("#chk_" + name + "_0").length;
                var checkedchk = $('input[id*="chk_' + name + '"]:checked').not("#chk_" + name + "_0").length;
                if (totalchk == checkedchk) {
                    $("#chk_" + name + "_0").prop("checked", true);
                }
                else {
                    $("#chk_" + name + "_0").prop("checked", false);

                }
            }
            else {
                $('input[id*="chk_' + name + '"]').each(function () {
                    console.log($(this).val());
                    if (parseInt($(this).val()) != 0) {
                        if (IsChecked == true) {
                            $(this).prop("checked", true);
                        }
                        else {
                            $(this).prop("checked", false);
                        }
                    }
                });
            }
            IsItemChecked = true;
        }

        function btnclearChange()
        {
            if ($("#ClearValue").is(':checked')) {
                document.getElementById("clear_toptext").value = 0;
                document.getElementById("clear_bottomtext").value = 0;
                document.getElementById("clear_fronttext").value = 0;
                document.getElementById("clear_sidetext").value = 0;
                document.getElementById("clear_backtext").value = 0;
            }
            else
            {
                document.getElementById("clear_toptext").value = "";
                document.getElementById("clear_bottomtext").value = "";
                document.getElementById("clear_fronttext").value = "";
                document.getElementById("clear_sidetext").value = "";
                document.getElementById("clear_backtext").value = "";
            }

        }



        function GetClearanceData() {
            $("#myProgress").show();
            $("#clearancedatatable tbody").html('');

            if ($("#Clear_Categorys_1").data("kendoDropDownList").text() == "Select Category 1") {
                alert("Select Category 1 !!");
                return;
            }
            else if ($("#Clear_Categorys_2").data("kendoDropDownList").text() == "Select Category 2") {
                alert("Select Category 2 !!");
                return;
            }
            else if ($("#clear_toptext").val() == "") {
                alert("Enter Top value !!");
                return;
            }
            else if ($("#clear_bottomtext").val() == "") {
                alert("Enter Bottom value !!");
                return;
            }
            else if ($("#clear_fronttext").val() == "") {
                alert("Enter Front value !!");
                return;
            }
            else if ($("#clear_sidetext").val() == "") {
                alert("Enter Side value !!");
                return;
            }

            var value = JSON.stringify({
                'urn': $("#ClearanceSet1fileversion").data("kendoDropDownList").value(),
                'category': Set1Ids
            });

            $("#myBar").css("width", '10%');
            $.ajax({
                type: "POST",
                contentType: 'application/json',
                url: '@Url.Action("GetClearanceDetails", "Clearance")',
                dataType: "json",
                data: value,
                success: function (result) {
                    forgeids = [];
                    filenameset1 =[];
                    categoryset1 =[];
                    revitidset1 =[];

                    for (var i = 0; i < result.length; i++) {
                        forgeids.push(result[i].Forgeid);
                        filenameset1.push(result[i].FileName);
                        categoryset1.push(result[i].Category_Name);
                        revitidset1.push(result[i].Revitid);
                    }
                    console.log("forgeids");
                    console.log(forgeids);


                    var value1 = JSON.stringify({
                        'urn': $("#ClearanceSet2fileversion").data("kendoDropDownList").value(),
                        'category': Set2Ids
                    });
                    $("#myBar").css("width", '20%');
                    $.ajax({
                        type: "POST",
                        contentType: 'application/json',
                        url: '@Url.Action("GetClearanceDetails", "Clearance")',
                        dataType: "json",
                        data: value1,
                        success: function (result) {
                            alldbId = [];
                            filenameset2 =[];
                            categoryset2 =[];
                            revitidset2 =[];

                            for (var i = 0; i < result.length; i++) {
                                alldbId.push(result[i].Forgeid);
                                filenameset2.push(result[i].FileName);
                                categoryset2.push(result[i].Category_Name);
                                revitidset2.push(result[i].Revitid);
                            }
                            console.log("alldbId");
                            console.log(alldbId);
                            window.parent.ClearanceCheck(forgeids, alldbId, filenameset1, categoryset1, revitidset1, filenameset2, categoryset2, revitidset2);
                            var btn = document.getElementById('btnSendEmail');
                            btn.disabled = false;

                        },
                        error: function (result) {
                            alert("Error");
                        }
                    });
                },
                error: function (result) {
                    alert("Error");
                }
            });

            var size = "";
            if (size == null)
                return;
        }



    </script>

  
</body>
</html>
